---
import MainHead from '../components/MainHead.astro';
import Nav from '../components/Nav.astro';
import PostPreview from '../components/PostPreview.astro';
import Pagination from '../components/Pagination.astro';
import { unique } from '../utils/unique';

// page
let title = `Shreesh`;
let description = 'Some words written by Shreesh Bhat about dev, gaming, and more';
let canonicalURL = Astro.request.canonicalURL;

export async function createCollection() {
    
    function title(tag) {
        return `Posts tagged "${tag}"`;
    }

    function description(tag) {
        return `All posts tagged with “${tag}”`;
    }

    const allPosts = Astro.fetchContent('./blog/*.md');
    const allTags = unique(allPosts.map(({ tags }) => tags).flat());

    return {
        // Set "paginate" to true to enable pagination.
        paginate: true,
        // `route` defines the URL structure for your collection.
        route: '/tags/:tag/:page?',
        // `paths` tells Astro which pages to generate in your collection.
        paths() {
          return allTags.map(tag => ({params: {tag}}))
        },
        // `props` returns the data needed on each page.
        async props({ params, paginate }) {
          const {tag} = params;
          const filteredPosts = allPosts.filter(p => p.tags.indexOf(tag) >= 0);
          return {
            tagTitle: title(tag),
            tagDescription: description(tag),
            posts: paginate(filteredPosts, { pageSize: 25 })
          }
        }
    }
}

const { tagTitle, tagDescription, posts } = Astro.props;
---

<html dir="ltr" lang="en">
  <head>
    <title>{title}</title>
    <MainHead
      title={title}
      description={description}
      
      canonicalURL={canonicalURL}
      prev={posts.url.prev}
      next={posts.url.next}
    />

    <style lang="scss">
      .count {
        font-size: 1em;
        display: block;
        text-align: center;
        color: var(--light-grey);
        margin-bottom: 40px;
      }
    </style>
  </head>

  <body>
    <Nav title={title} />

    <main class="wrapper">
      <h2 class="title">{tagTitle}</h2>
      <small class="count">{posts.start + 1} – {posts.end + 1} of {posts.total}</small>
      {posts.data.map((blogPost) => <PostPreview blog={blogPost} />)}
    </main>

    <footer>
      <Pagination prevUrl={posts.url.prev} nextUrl={posts.url.next} />
    </footer>
  </body>
</html>