---
import MainHead from '../components/MainHead.astro';
import Nav from '../components/Nav.astro';
import PostPreview from '../components/PostPreview.astro';
import Pagination from '../components/Pagination.astro';

// page
let title = `Shreesh`;
let description = 'An example blog on Astro';
let canonicalURL = Astro.request.canonicalURL;

// collection
let { collection } = Astro.props;
export async function createCollection() {
  return {
    /** Load blog posts, sort newest -> oldest */
    async data() {
      let allPosts = Astro.fetchContent('./blog/*.md');
      allPosts.sort((a, b) => new Date(b.date) - new Date(a.date));
      return allPosts;
    },
    /** Set page size */
    pageSize: 3,
    /** Generate RSS feed (only for main /blog/ feed) */
    rss: {
      title: `Shreesh`,
      description: 'Some words written by Shreesh Bhat about dev, art, and more.',
      customData: `<language>en-us</language>`,
      item: (item) => ({
        title: item.title,
        description: item.description,
        link: item.url,
        pubDate: item.date,
      }),
    }
  };
}
---

<html>
  <head>
    <title>{title}</title>
    <MainHead
      title={title}
      description={description}
      image={collection.data[0].image}
      canonicalURL={canonicalURL}
      prev={collection.url.prev}
      next={collection.url.next}
    />

    <style lang="scss">
      .count {
        font-size: 1em;
        display: block;
        text-align: center;
        color: var(--light-grey);
      }
    </style>
  </head>

  <body>
    <Nav title={title} />

    <main class="wrapper">
      <h2 class="title">All Posts</h2>
      <small class="count">{collection.start + 1} â€“ {collection.end + 1} of {collection.total}</small>
      {collection.data.map((blogpost) => <PostPreview blog={blogpost} />)}
    </main>

    <footer>
      <Pagination prevUrl={collection.url.prev} nextUrl={collection.url.next} />
    </footer>
  </body>
</html>
